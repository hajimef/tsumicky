export function addMessages() {
  Blockly.Msg["TSUMICKY_CATEGORY_SL_DATA"] = "Data";
  Blockly.Msg["TSUMICKY_SL_DATA_LOAD_DATASET"] = "write %2 dataset to %1";
  Blockly.Msg["TSUMICKY_SL_DATA_LOAD_DATASET_TOOLTIP"] = "Write a dataset commonly used in scikit-learn to a specified range in Excel.";
  Blockly.Msg["TSUMICKY_SL_DATA_LOAD"] = "substitute %3 %4 for %2 in %1 %5 %6 first value is label";
  Blockly.Msg["TSUMICKY_SL_DATA_LOAD_TOOLTIP"] = "Input the data for your linear regression into a list or range of cells in Excel.";
  Blockly.Msg["TSUMICKY_SL_DATA_SPLIT"] = "split a portion of the data %1 ratio of training data %2 %3 ratio of test data %4 %5 random seed %6";
  Blockly.Msg["TSUMICKY_SL_DATA_SPLIT_TOOLTIP"] = "Divide the data and use a part as training data and a part as test data.\nFor the proportion parameter, specify the proportion of data between 0 and 1.\nIf you specify 0 for the proportion of training data, all data other than test data will be used as training data.";
  Blockly.Msg["TSUMICKY_SL_DATA_BACKUP"] = "save X to a temporary buffer";
  Blockly.Msg["TSUMICKY_SL_DATA_BACKUP_TOOLTIP"] = "Save X to a temporary buffer. \nThis is used when you want to extract part of the data of X and restore it later.";
  Blockly.Msg["TSUMICKY_SL_DATA_RESTORE"] = "restore X from a temporary buffer";
  Blockly.Msg["TSUMICKY_SL_DATA_RESTORE_TOOLTIP"] = "Restore X from a temporary buffer.";
  Blockly.Msg["TSUMICKY_SL_DATA_SLICE"] = "extract some columns of X";
  Blockly.Msg["TSUMICKY_SL_DATA_SLICE_TOOLTIP"] = "Extract some columns of X. \nUse this when you want to learn only some columns of X.";
  Blockly.Msg["TSUMICKY_SL_DATA_SLICE_NUMBER"] = "column %1";
  Blockly.Msg["TSUMICKY_SL_DATA_SLICE_NUMBER_TOOLTIP"] = "Specify the column to be extracted by column number.";
  Blockly.Msg["TSUMICKY_SL_DATA_SLICE_LABEL"] = "column with label %1";
  Blockly.Msg["TSUMICKY_SL_DATA_SLICE_LABEL_TOOLTIP"] = "Specify the column to be extracted by label.";
  Blockly.Msg["TSUMICKY_SL_DATA_SLICE_PARAM_CAPTION"] = "columns to extract";
  Blockly.Msg["TSUMICKY_SL_DATA_SLICE_PARAM_CONTAINER"] = "Parameter %1";
  Blockly.Msg["TSUMICKY_SL_DATA_SLICE_PARAM_CONTAINER_TOOLTIP"] = "Reorganize blocks by adding, removing, or reordering items.";
  Blockly.Msg["TSUMICKY_SL_DATA_SLICE_PARAM_ITEM"] = "column";
  Blockly.Msg["TSUMICKY_SL_DATA_SLICE_PARAM_ITEM_TOOLTIP"] = "parameter item.";
//  Blockly.Msg["TSUMICKY_SL_DATA_LOADX"] = "set %2 %3 for X in %1 %4"
//  Blockly.Msg["TSUMICKY_SL_DATA_LOADX_TOOLTIP"] = "Set a list or a range of cells in Excel for X in the training/test data."
//  Blockly.Msg["TSUMICKY_SL_DATA_LOADY"] = "set %2 %3 for Y in %1 %4"
//  Blockly.Msg["TSUMICKY_SL_DATA_LOADY_TOOLTIP"] = "Set a list or a range of cells in Excel for Y in the training/test data."
  Blockly.Msg["TSUMICKY_SL_DATA_STANDARDIZE"] = "standardize X %1";
  Blockly.Msg["TSUMICKY_SL_DATA_STANDARDIZE_TOOLTIP"] = "Standardize X of training/test data.";
  Blockly.Msg["TSUMICKY_SL_DATA_SAVE"] = "write %3 of %2 to %1";
  Blockly.Msg["TSUMICKY_SL_DATA_SAVE_TOOLTIP"] = "Write the training data, test data, and predicted values ​​into Excel cells.";
  Blockly.Msg["TSUMICKY_SL_DATA_SAVE_BOTH"] = "label and values";
  Blockly.Msg["TSUMICKY_SL_DATA_SAVE_VALUE"] = "values only";
  Blockly.Msg["TSUMICKY_SL_DATA_SAVE_LABEL"] = "label only";
  Blockly.Msg["TSUMICKY_SL_DATA_MPL"] = "%2 of %1 %3 %4";
  Blockly.Msg["TSUMICKY_SL_DATA_MPL_TOOLTIP"] = "This is the data to be graphed with matplotlib.";
  Blockly.Msg["TSUMICKY_SL_DATA_MPL_TYPE"] = "method";
  Blockly.Msg["TSUMICKY_SL_DATA_MPL_COLUMN"] = "column";
  Blockly.Msg["TSUMICKY_SL_DATA_MPL_LABEL"] = "label";
  Blockly.Msg["TSUMICKY_SL_DATA_MPL_OFFSET"] = "offset";
//  Blockly.Msg["TSUMICKY_SL_DATA_X"] = "%1 of X %2";
//  Blockly.Msg["TSUMICKY_SL_DATA_X_TOOLTIP"] = "Obtain X for training/test data.";
//  Blockly.Msg["TSUMICKY_SL_DATA_Y"] = "%1 of Y %2";
//  Blockly.Msg["TSUMICKY_SL_DATA_Y_TOOLTIP"] = "Obtain Y for training/test data.";
//  Blockly.Msg["TSUMICKY_SL_DATA_PREDICT"] = "prediction value of %1 %2";
//  Blockly.Msg["TSUMICKY_SL_DATA_PREDICT_TOOLTIP"] = "Predicted value calculated based on the learning results.";
  Blockly.Msg["TSUMICKY_SL_DATA_TYPE_TRAIN"] = "training data";
  Blockly.Msg["TSUMICKY_SL_DATA_TYPE_TEST"] = "test data";
  Blockly.Msg["TSUMICKY_SL_DATA_TYPE_ALL"] = "all data";
  Blockly.Msg["TSUMICKY_SL_DATA_XY_STD_X"] = "standardized X";
  Blockly.Msg["TSUMICKY_SL_DATA_XY_COLUMN"] = "particular column of X";
  Blockly.Msg["TSUMICKY_SL_DATA_XY_STD_COLUMN"] = "particular column of standardized X";
  Blockly.Msg["TSUMICKY_SL_DATA_XY_PREDICT_Y"] = "predicted values of Y";
};